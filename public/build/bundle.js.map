{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/measure.js","../../src/tracer.js","../../src/style.js","../../src/view.js","../../src/tome.js","../../src/elemental.js","../../src/geomancer.js","../../src/Geomancer.svelte","../../src/Example.svelte","../../src/index.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const validate = {\n  moveTo: params => params.length === 2 ? 'moveTo must have 2 parameters' : null,\n  lineTo: params => params.length === 2 ? 'lineTo must have 2 parameters' : null,\n  bezierCurveTo: params => params.length === 6 ? 'bezierCurveTo must have 6 parameters' : null,\n  quadraticCurveTo: params => params.length === 4 ? 'quadraticCurveTo must have 4 parameters' : null,\n  arc: params => (params.length === 5 || params.length === 6) ? 'arc must have 5 or 6 parameters' : null,\n  arcTo: params => params.length === 5 ? 'arcTo must have 5 parameters' : null,\n  ellipse: params => (params.length === 7 || params.length === 8) ? 'ellipse must have 7 or 8 parameters' : null,\n  rect: params => params.length === 4 ? 'rect must have 4 parameters' : null,\n  closePath: params => params.length === 0 ? 'closePath must have 0 parameters' : null\n}\n\nconst subBox = {\n  moveTo: (x, y) => ({\n    xmin: x,\n    ymin: y,\n    xmax: x,\n    ymax: y\n  }),\n  lineTo: (x, y) => ({\n    xmin: x,\n    ymin: y,\n    xmax: x,\n    ymax: y\n  }),\n  bezierCurveTo: (cp1x, cp1y, cp2x, cp2y, x, y) => ({\n    xmin: Math.min(cp1x, cp2x, x),\n    ymin: Math.min(cp1y, cp2y, y),\n    xmax: Math.max(cp1x, cp2x, x),\n    ymax: Math.max(cp1y, cp2y, y)\n  }),\n  quadraticCurveTo: (cpx, cpy, x, y) => ({\n    xmin: Math.min(cpx, x),\n    ymin: Math.min(cpy, y),\n    xmax: Math.max(cpx, x),\n    ymax: Math.max(cpy, y)\n  }),\n  arc: (x, y, radius) => ({\n    xmin: x-radius,\n    ymin: y-radius,\n    xmax: x+radius,\n    ymax: y+radius\n  }),\n  arcTo: (x1, y1, x2, y2) => ({\n    xmin: Math.min(x1, x2),\n    ymin: Math.min(y1, y2),\n    xmax: Math.max(x1, x2),\n    ymax: Math.max(y1, y2)\n  }),\n  ellipse: (x, y, radiusX, radiusY) => ({\n    xmin: Math.min(x-radiusX, x-radiusY),\n    ymin: Math.min(y-radiusY, y-radiusY),\n    xmax: Math.max(x+radiusX, x+radiusX),\n    ymax: Math.max(y+radiusY, y+radiusY)\n  }),\n  rect: (x, y, width, height) => ({\n    xmin: x,\n    ymin: y,\n    xmax: x+width,\n    ymax: y+height\n  })\n}\n\nfunction pathToBox(path) {\n  if (!path.length) return null\n\n  let xmins = []\n  let ymins = []\n  let xmaxs = []\n  let ymaxs = []\n  path.forEach(subpath => {\n    if (subpath[0] in subBox) {\n      let box = subBox[subpath[0]](...subpath.slice(1))\n      xmins.push(box.xmin)\n      ymins.push(box.ymin)\n      xmaxs.push(box.xmax)\n      ymaxs.push(box.ymax)\n    }\n  })\n\n  let box = {\n    min: {\n      x: Math.min(...xmins),\n      y: Math.min(...ymins)\n    },\n    max: {\n      x: Math.max(...xmaxs),\n      y: Math.max(...ymaxs)\n    }\n  }\n\n  return box\n}\n\nfunction transformBox({min, max}, transform) {\n  let xmin = Math.min(\n    transformX(min.x, min.y, transform),\n    transformX(min.x, max.y, transform),\n    transformX(max.x, min.y, transform),\n    transformX(max.x, max.y, transform)\n  )\n  let xmax = Math.max(\n    transformX(min.x, min.y, transform),\n    transformX(min.x, max.y, transform),\n    transformX(max.x, min.y, transform),\n    transformX(max.x, max.y, transform)\n  )\n  let ymin = Math.min(\n    transformY(min.x, min.y, transform),\n    transformY(min.x, max.y, transform),\n    transformY(max.x, min.y, transform),\n    transformY(max.x, max.y, transform)\n  )\n  let ymax = Math.max(\n    transformY(min.x, min.y, transform),\n    transformY(min.x, max.y, transform),\n    transformY(max.x, min.y, transform),\n    transformY(max.x, max.y, transform)\n  )\n\n  return {\n    min: {x: xmin, y: ymin},\n    max: {x: xmax, y: ymax}\n  }\n}\n\nfunction transformX(x, y, transform) {\n  return x*transform[0]+y*transform[2]+transform[4]\n}\n\nfunction transformY(x, y, transform) {\n  return y*transform[1]+x*transform[3]+transform[5]\n}\n\nfunction pathToCanvas(path) {\n  if (path.text) return path\n  if (!path.length) return null\n\n  let p2d = new Path2D()\n  path.forEach(subpath => {\n    p2d[subpath[0]](...subpath.slice(1))\n  })\n\n  return p2d\n}\n\nfunction pathValidate(path) {\n  if (!path.length) return 'Paths must have at least 1 instruction'\n\n  let errors = []\n  path.forEach(subpath => {\n    let error = validate[subpath[0]](subpath.slice(1))\n    if (error) errors.push(error)\n  })\n\n  return errors\n}\n\nfunction pathsToShapes (paths) {\n  let shapes = {}\n  for (let id in paths) {\n    let shape = pathToCanvas(paths[id])\n    shapes[id] = shape\n  }\n  return shapes\n}\n\nfunction pathsToBoxes (paths) {\n  let boxes = {}\n  for (let id in paths) {\n    let box = pathToBox(paths[id])\n    boxes[id] = box\n  }\n  return boxes\n}\n\nfunction applyTransform (base, apply) {\n  return [\n    base[0]*apply[0] + base[2]*apply[1],\n    base[1]*apply[0] + base[3]*apply[1],\n    base[0]*apply[2] + base[2]*apply[3],\n    base[1]*apply[2] + base[3]*apply[3],\n    base[0]*apply[4] + base[2]*apply[5] + base[4],\n    base[1]*apply[4] + base[3]*apply[5] + base[5],\n  ]\n}\n\nexport default {\n  pathsToShapes,\n  pathToBox,\n  transformBox,\n  pathToCanvas,\n  pathValidate,\n  applyTransform\n}\n","function tracer (init = []) { // init is filled with objects that have a min point, a max point, and a value\n  const tracer = {\n    x: [],\n    y: [],\n    checks: {},\n    order: {}\n  }\n  let order = 0\n\n  function orderSort(a, b) {\n    console.log(a, b, tracer.order[a], tracer.order[b])\n    if (tracer.order[a] < tracer.order[b]) return 1\n    if (tracer.order[a] > tracer.order[b]) return -1\n    return 0\n  }\n\n  function sorter (a, b) {\n    if (a.index < b.index) return -1\n    if (a.index > b.index) return 1\n    return 0\n  }\n\n  return {\n    insert: (min, max, value, check) => {\n      tracer.checks[value] = check\n      tracer.order[value] = order\n      order = order + 1\n\n      tracer.x.push({index: Math.floor(min.x), value})\n      tracer.x.push({index: Math.floor(max.x), value})\n      tracer.x.sort(sorter)\n\n      tracer.y.push({index: Math.floor(min.y), value})\n      tracer.y.push({index: Math.floor(max.y), value})\n      tracer.y.sort(sorter)\n    },\n    intersectPoint: (point) => {\n      let active = new Set()\n      let x = Math.floor(point.x)\n      let y = Math.floor(point.y)\n\n      for (let i in tracer.x) {\n        let box = tracer.x[i]\n        if (box.index <= x) {\n          if (active.has(box.value)) {\n            active.delete(box.value)\n          } else {\n            active.add(box.value)\n          }\n        } else {\n          break\n        }\n      }\n\n      let xintersects = [...active]\n      active = new Set()\n\n      for (let i in tracer.y) {\n        let box = tracer.y[i]\n        if (box.index <= y) {\n          if (active.has(box.value)) {\n            active.delete(box.value)\n          } else {\n            active.add(box.value)\n          }\n        } else {\n          break\n        }\n      }\n\n      let possibles = [...xintersects].filter(val => active.has(val))\n      return possibles.filter(val => tracer.checks[val](point.x, point.y)).sort(orderSort)\n    },\n    intersectBox: ({min, max}) => {\n      let active = new Set()\n      let xmin = Math.floor(min.x)\n      let xmax = Math.floor(max.x)\n      let ymin = Math.floor(min.y)\n      let ymax = Math.floor(max.y)\n\n      for (let i in tracer.x) {\n        let box = tracer.x[i]\n        if (box.index <= xmin) {\n          if (active.has(box.value)) {\n            active.delete(box.value)\n          } else {\n            active.add(box.value)\n          }\n        } else if (box.index <= xmax) {\n          active.add(box.value)\n        } else {\n          break\n        }\n      }\n\n      let xintersects = [...active]\n      active = new Set()\n\n      for (let i in tracer.y) {\n        let box = tracer.y[i]\n        if (box.index <= ymin) {\n          if (active.has(box.value)) {\n            active.delete(box.value)\n          } else {\n            active.add(box.value)\n          }\n        } else if (box.index <= ymax) {\n          active.add(box.value)\n        } else {\n          break\n        }\n      }\n\n      return [...xintersects].filter(val => active.has(val)).sort(orderSort)\n    }\n  }\n}\n\nfunction boxesIntersect(one, two) {\n  if (one.max.x < two.min.x) return false\n  if (two.max.x < one.min.x) return false\n  if (one.max.y < two.min.y) return false\n  if (two.max.y < two.max.y) return false\n  return true\n}\n\nfunction boxBox(boxes) {\n  return {\n    max: {\n      x: Math.max(...boxes.map(box => box.max.x)),\n      y: Math.max(...boxes.map(box => box.max.y))\n    },\n    min: {\n      x: Math.min(...boxes.map(box => box.min.x)),\n      y: Math.min(...boxes.map(box => box.min.y))\n    }\n  }\n}\n\nfunction generateHitChecker(context, path, transform) {\n  return (x, y) => {\n    context.save()\n    context.setTransform(...transform)\n    const inPath = context.isPointInPath(path, x, y)\n    context.restore()\n    return inPath\n  }\n}\n\nexport default {\n  tracer,\n  boxesIntersect,\n  boxBox,\n  generateHitChecker,\n}\n","\nconst defaults = {\n  fillStyle: null,\n  strokeStyle: null,\n  lineWidth: 1,\n  lineCap: 'butt',\n  lineJoin: 'miter',\n  miterLimit: 10.0,\n  lineDash: [],\n  lineDashOffset: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  shadowBlur: 0,\n  shadowColor: 'transparent',\n  fill: 'nonzero',\n  font: 'sans-serif',\n  textAlign: 'start',\n  textBaseline: 'alphabetic',\n  direction: 'inherit'\n}\n\nfunction palletteToPainter(options) {\n  let pallette = {...defaults, ...options}\n  function painter(context, path) {\n    context.lineWidth = pallette.lineWidth\n    context.lineCap = pallette.lineCap\n    context.lineJoin = pallette.lineJoin\n    context.miterLimit = pallette.miterLimit\n    context.setLineDash(pallette.lineDash)\n    context.lineDashOffset = pallette.lineDashOffset\n    context.font = pallette.font\n    context.textAlign = pallette.textAlign\n    context.textBaseline = pallette.textBaseline\n    context.direction = pallette.direction\n    context.shadowOffsetX = pallette.shadowOffsetX\n    context.shadowOffsetY = pallette.shadowOffsetY\n    context.shadowBlur = pallette.shadowBlur\n    context.shadowColor = pallette.shadowColor\n    context.fillStyle = pallette.fillStyle\n    context.strokeStyle = pallette.strokeStyle\n\n    if (path.text) {\n      if (pallette.fillStyle) context.fillText(path.text, path.x, path.y, path.maxWidth)\n      if (pallette.strokeStyle) context.strokeText(path.text, path.x, path.y, path.maxWidth)\n    } else {\n      if (pallette.fillStyle) context.fill(path)\n      if (pallette.strokeStyle) context.stroke(path)\n    }\n  }\n\n  return painter\n}\n\nfunction linearGradient(context, start, end, stops) {\n  let grad = context.createLinearGradient(start.x, start.y, end.x, end.y)\n  stops.forEach(({loc, color}) => grad.addColorStop(loc, color))\n\n  return grad\n}\n\nfunction radialGradient(context, start, end, stops) {\n  let grad = context.createRadialGradient(start.x, start.y, start.radius, end.x, end.y, end.radius)\n  stops.forEach(({loc, color}) => grad.addColorStop(loc, color))\n\n  return grad\n}\n\nfunction pattern(context, url, type) {\n  let img = new Image()\n  img.src(url)\n  let ptrn = context.createPattern(img, type)\n\n  return ptrn\n}\n\nfunction pallettesToPainters (pallettes) {\n  let painters = {}\n  for (let id in pallettes) {\n    let painter = palletteToPainter(pallettes[id])\n    painters[id] = painter\n  }\n  return painters\n}\n\nexport default {\n  linearGradient,\n  radialGradient,\n  pattern,\n  palletteToPainter,\n  pallettesToPainters\n}\n","function minZoom({extents, area}) {\n  const possibleMinZoom = [extents.min.zoom]\n  if (extents.max.x !== null && extents.min.x !== null) possibleMinZoom.push(area.width/(extents.max.x-extents.min.x))\n  if (extents.min.y !== null && extents.max.y !== null) possibleMinZoom.push(area.height/(extents.max.y-extents.min.y))\n  const minZoom = Math.max(...possibleMinZoom)\n\n  return minZoom\n}\n\nfunction enforceExtents ({area, extents, transform}) {\n  let maxX = -extents.min.x\n  let minX = area.width - extents.max.x*transform[0]\n  let maxY = -extents.min.y\n  let minY = area.height - extents.max.y*transform[3]\n\n  if (extents.min.x !== null && transform[4] < minX) transform[4] = minX\n  if (extents.max.x !== null && transform[4] > maxX) transform[4] = maxX\n  if (extents.min.y !== null && transform[5] < minY) transform[5] = minY\n  if (extents.max.y !== null && transform[5] > maxY) transform[5] = maxY\n}\n\nfunction zoom ({transform}, zoom, x=null, y=null) {\n  x = x === null ? transform[4] + (area.width / (2 * transform[0])) : x\n  y = y === null ? transform[5] + (area.height / (2 * transform[3])) : y\n  transform[4] = x - zoom * (x-transform[4]) / transform[0]\n  transform[5] = y - zoom * (y-transform[5]) / transform[3]\n  transform[0] = zoom\n  transform[3] = zoom\n}\n\nexport default {\n  mouse: {\n    zoom: (mouse, camera, speed=1.2) => {\n      let factor = camera.transform[0] * (speed ** -Math.sign(mouse.deltaY))\n\n      factor = factor > camera.extents.max.zoom ? camera.extents.max.zoom : factor\n      const min = minZoom(camera)\n\n      factor = factor < min ? min : factor\n\n      zoom(camera, factor, mouse.clientX, mouse.clientY)\n      enforceExtents(camera)\n\n      mouse.preventDefault()\n      mouse.stopPropagation()\n    },\n    pan: (mouse, camera) => {\n      let lastX = mouse.clientX\n      let lastY = mouse.clientY\n\n      return (mouse) => {\n        camera.transform[4] = camera.transform[4] + mouse.clientX - lastX\n        camera.transform[5] = camera.transform[5] + mouse.clientY - lastY\n        lastX = mouse.clientX\n        lastY = mouse.clientY\n        enforceExtents(camera)\n      }\n    }\n  }\n\n}\n","import tracer from './tracer'\nimport style from './style'\nimport measure from './measure'\nimport view from './view'\n\nconst shapes = {}\nconst styles = {}\nconst subjects = {}\nconst renderers = {}\nconst modes = {}\n\nfunction renderer(id, func) {\n  renderers[id] = (context, subject, assets) => {\n    if (subject.visible) {\n      context.save()\n      context.transform(...(subject.transform))\n      func(context, subject.details, assets)\n      context.restore()\n    }\n  }\n}\n\nrenderer(\"simple\", (context, {shape, style, trace}, {viewport, handles, tome}) => {\n  const t = context.getTransform()\n  const transform = [t.a, t.b, t.c, t.d, t.e, t.f]\n  const {box, path} = tome.shape(shape)\n  const finalBox = measure.transformBox(box, transform)\n  if (tracer.boxesIntersect(viewport, finalBox)) {\n    if (trace) {\n      handles.insert(finalBox.min, finalBox.max, trace, tracer.generateHitChecker(context, path, transform))\n    }\n    tome.style(style).painter(context, path)\n  }\n})\n\nrenderer(\"nested\", (context, {subjects}, assets) => {\n  subjects.forEach(sub => {\n    const subject = assets.tome.subject(sub)\n    const render = assets.tome.renderer(subject.renderer)\n    render(context, subject, assets)\n  })\n})\n\nrenderer(\"text\", (context, {style, text, x, y, maxWidth}, {tome}) => {\n  tome.style(style).painter(context, {text, x, y, maxWidth})\n})\n\nfunction mode(id, controls, init) {\n  modes[id] = {\n    controls,\n    init\n  }\n}\n\nmode(\n  null,\n  {},\n  () => null\n)\n\nmode(\n  \"default\",\n  {\n    mousedown: (mouse, {geo, elem}) => {\n      elem.set(\"panning\", {\n        mouse,\n        geo,\n        end: () => {elem.set(\"default\", {geo, elem})}\n      })\n    },\n    wheel: (mouse, {geo}) => {\n      view.mouse.zoom(mouse, geo.camera)\n    }\n  },\n  (state) => state\n)\n\nmode(\n  \"panning\",\n  {\n  \tmouseup: (mouse, { end }) => { end() },\n  \tmouseout: (mouse, { end }) => { end() },\n  \tmousemove: (mouse, { pan }) => { pan(mouse) },\n  },\n  ({mouse, geo, end}) => {\n    return {\n      pan: view.mouse.pan(mouse, geo.camera),\n      end\n    }\n  }\n)\n\nexport default {\n  register: {\n    shape: (id, instructions) => {\n      shapes[id] = {\n        instructions,\n        path: measure.pathToCanvas(instructions),\n        box: measure.pathToBox(instructions)\n      }\n    },\n    style: (id, styling) => {\n      styles[id] = {\n        styling,\n        painter: style.palletteToPainter(styling)\n      }\n    },\n    subject: (id, {renderer, details, visible, transform}) => {\n      subjects[id] = {\n        renderer,\n        details,\n        visible,\n        transform\n      }\n    },\n    renderer,\n    mode,\n  },\n  shape: (id) => shapes[id],\n  style: (id) => styles[id],\n  subject: (id) => subjects[id],\n  renderer: (id) => renderers[id],\n  mode: (id) => modes[id],\n  export: () => JSON.stringify({subjects, shapes, styles}),\n  import: (json) => {\n    imports = JSON.parse(json)\n    shapes = {\n      ...shapes,\n      ...(imports.shapes)\n    }\n    styles = {\n      ...styles,\n      ...(imports.styles)\n    }\n    subjects = {\n      ...subjects,\n      ...(imports.subjects)\n    }\n  }\n}\n","import tome from './tome'\n\nexport default function (el) {\n  const internal = {\n    mode: null,\n    listeners: [],\n  }\n\n  return {\n    set: (nextMode, initParams) => {\n      const state = tome.mode(nextMode).init(initParams)\n      internal.listeners.forEach(([ev, handler]) => el.removeEventListener(ev, handler))\n\n      let handlers = []\n      let controls = tome.mode(nextMode).controls\n      for (const ev in controls) {\n        handlers.push([ev, (event) => controls[ev](event, state, el)])\n      }\n      handlers.forEach(([ev, handler]) => el.addEventListener(ev, handler))\n\n      internal.listeners = handlers\n      internal.mode = nextMode\n    },\n    element: () => el,\n    mode: () => internal.mode\n  }\n}\n","import measure from './measure'\nimport tracer from './tracer'\nimport tome from './tome'\nimport elemental from './elemental'\n\n\nexport default function () {\n  const geomancer = {\n    camera: {\n      transform: [1, 0, 0, 1, 0, 0],\n      extents: {\n        min: {x: null, y: null, zoom: null},\n        max: {x: null, y: null, zoom: null},\n      },\n      area: {\n        width: 800,\n        height: 800\n      }\n    },\n    scene: [],\n    tome,\n    handles: tracer.tracer()\n  }\n\n  geomancer.render = (context) => {\n    context.setTransform(1, 0, 0, 1, 0, 0)\n    context.clearRect(0, 0, geomancer.camera.area.width, geomancer.camera.area.height)\n    context.setTransform(...geomancer.camera.transform)\n    const viewport = measure.transformBox(\n      {\n        min: {x: 0, y: 0},\n        max: {x: geomancer.camera.area.width, y: geomancer.camera.area.height}\n      },\n      geomancer.camera.transform\n    )\n    geomancer.handles = tracer.tracer()\n    geomancer.scene.forEach(sub => {\n      const subject = tome.subject(sub)\n      const render = tome.renderer(subject.renderer)\n      if (render) render(context, subject, {viewport, handles: geomancer.handles, tome})\n    })\n  }\n\n  return geomancer\n}\n","<svelte:options tag=\"geomancer-scene\"/>\n\n<script>\nimport { writable } from 'svelte/store';\nimport { onMount } from 'svelte';\n\nimport geomancer from './geomancer';\nimport elemental from './elemental';\n\nexport let geo = geomancer()\nexport let mode = {\n\tname: \"default\",\n\tstate: {}\n}\n\nlet canvas;\nlet controls = writable(mode);\n$: controls.set(mode)\nlet frame;\n\nfunction drawingLoop (context) {\n\t(function loop() {\n\t\tframe = requestAnimationFrame(loop);\n\t\tgeo.render(context)\n\t})()\n\treturn () => {\n\t\tcancelAnimationFrame(frame);\n\t};\n}\n\nonMount(() => {\n\tgeo.render(canvas.getContext('2d'))\n\tconst elem = elemental(canvas)\n\tcontrols.subscribe(() => {\n\t\telem.set(mode.name, {elem, geo, ...mode.state})\n\t})\n\treturn drawingLoop(canvas.getContext('2d'))\n});\n</script>\n\n<canvas bind:this={canvas} width=\"{geo.camera.area.width}px\" height=\"{geo.camera.area.height}px\"/>\n","<svelte:options tag=\"geomancer-example\"/>\n\n<script>\nimport Geomancer from \"./Geomancer.svelte\"\nimport geomancer from \"./geomancer\"\nimport tome from \"./tome\"\n\ntome.register.shape(\"hexagon\", [\n  ['moveTo', 2.5, 43.3],\n  ['lineTo', 26.25, 84.77],\n  ['lineTo', 73.75, 84.77],\n  ['lineTo', 97.5, 43.3],\n  ['lineTo', 73.75, 2.165],\n  ['lineTo', 26.25, 2.165],\n  ['closePath'],\n])\ntome.register.shape(\"boundary\", [['rect', 10, 10, 780, 780]])\n\ntome.register.style(\"black\", {\n  fillStyle: 'black',\n  lineWidth: 3,\n  lineJoin: 'round'\n})\ntome.register.style(\"thinBlackLines\", {\n  lineWidth: 5,\n  strokeStyle: 'black',\n  lineJoin: 'round'\n})\n\ntome.register.subject(\"lone hex\", {\n  details: {\n    shape: \"hexagon\",\n    style: \"black\",\n    trace: \"lone hex\",\n  },\n  transform: [1, 0, 0, 1, 100, 100],\n  visible: true,\n  renderer: \"simple\",\n})\n\ntome.register.subject(\"boundaries\", {\n  details: {\n    shape: \"boundary\",\n    style: \"thinBlackLines\",\n    trace: \"boundaries\",\n  },\n  transform: [1, 0, 0, 1, 0, 0],\n  visible: true,\n  renderer: \"simple\",\n})\n\ntome.register.subject(\"base layer\", {\n  details: {\n    subjects: [\"boundaries\", \"lone hex\"]\n  },\n  transform: [1, 0, 0, 1, 0, 0],\n  visible: true,\n  renderer: \"nested\",\n})\n\ntome.register.mode(\"tracing\",\n  {\n    mousedown: (mouse, {geo}) => {\n      console.log(geo.handles.intersectPoint({x: mouse.offsetX, y: mouse.offsetY}))\n    }\n  },\n  (state) => state\n)\n\n\nlet geo = geomancer();\ngeo.camera.extents = {min: {x: 0, y: 0, zoom: null}, max: {x: 800, y: 800, zoom: 5}}\ngeo.scene = [\"base layer\"]\n\nlet mode = {\n  name: \"tracing\",\n  state: {}\n}\n</script>\n\n<Geomancer bind:geo={geo} bind:mode={mode}/>\n","import Geomancer from './Geomancer.svelte'\nimport Example from './Example.svelte'\nimport geomancer from './geomancer'\nimport elemental from './elemental'\nimport measure from './measure'\nimport style from './style'\nimport tracer from './tracer'\nimport tome from './tome'\nimport view from './view'\n\nexport default {\n  Example,\n  Geomancer,\n  geomancer,\n  elemental,\n  measure,\n  style,\n  tracer,\n  tome,\n  view,\n}\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","insert","target","node","anchor","insertBefore","detach","parentNode","removeChild","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","SvelteElement","transition_in","block","local","delete","bind","name","index","props","undefined","bound","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","callbacks","ready","ret","rest","hydrate","nodes","element","Array","from","childNodes","children","l","c","intro","HTMLElement","[object Object]","super","this","attachShadow","mode","key","slotted","appendChild","_oldValue","newValue","$destroy","type","indexOf","splice","subscriber_queue","validate","moveTo","params","lineTo","bezierCurveTo","quadraticCurveTo","arc","arcTo","ellipse","rect","closePath","subBox","x","y","xmin","ymin","xmax","ymax","cp1x","cp1y","cp2x","cp2y","Math","min","max","cpx","cpy","radius","x1","y1","x2","y2","radiusX","radiusY","width","height","transformX","transform","transformY","pathToCanvas","path","text","p2d","Path2D","subpath","slice","pathsToShapes","paths","shapes","id","shape","pathToBox","xmins","ymins","xmaxs","ymaxs","box","transformBox","pathValidate","errors","error","applyTransform","base","apply","tracer","checks","order","orderSort","console","log","sorter","check","floor","sort","intersectPoint","point","active","xintersects","val","intersectBox","boxesIntersect","one","two","boxBox","boxes","generateHitChecker","save","setTransform","inPath","isPointInPath","restore","defaults","fillStyle","strokeStyle","lineWidth","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","font","textAlign","textBaseline","direction","palletteToPainter","pallette","setLineDash","fillText","maxWidth","strokeText","stroke","linearGradient","start","end","stops","grad","createLinearGradient","loc","color","addColorStop","radialGradient","createRadialGradient","pattern","url","img","Image","src","createPattern","pallettesToPainters","pallettes","painters","painter","enforceExtents","area","extents","maxX","minX","maxY","minY","mouse","zoom","camera","speed","factor","sign","deltaY","possibleMinZoom","minZoom","clientX","clientY","preventDefault","stopPropagation","pan","lastX","lastY","styles","subjects","renderers","modes","renderer","func","subject","assets","visible","details","controls","style","trace","viewport","handles","tome","t","getTransform","e","f","finalBox","measure","sub","render","mousedown","geo","elem","set","wheel","view","state","mouseup","mouseout","mousemove","register","instructions","styling","export","JSON","stringify","import","json","imports","parse","el","internal","listeners","nextMode","initParams","ev","handler","removeEventListener","handlers","event","addEventListener","geomancer","scene","clearRect","document","createElement","canvas","frame","stop","subscribers","new_value","run_queue","s","subscribe","invalidate","subscriber","writable","drawingLoop","loop","requestAnimationFrame","cancelAnimationFrame","getContext","elemental","o","outros","offsetX","offsetY","Example","Geomancer"],"mappings":"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"}